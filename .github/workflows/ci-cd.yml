name: CI/CD Pipeline

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm test

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup SSH Key and Configure Known Hosts
        run: |
          # Ensure SSH directory exists
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # Decode the private key and add it securely to ssh-agent
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" | tr -d '\r' | awk '{gsub(/\\n/,"\n")}1' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Start SSH agent and add the key
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa

          # Add AWS host to known hosts
          ssh-keyscan -H ${{ secrets.AWS_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -v ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }} "echo 'SSH Connection Successful'"

      - name: Deploy Application to AWS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }} << 'EOF'
            cd /home/ubuntu/app  # Change to your app directory
            git pull origin main  # Pull the latest code
            npm install           # Install dependencies
            pm2 restart all       # Restart the app with PM2
          EOF
