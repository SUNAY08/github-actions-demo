name: Deploy to EC2

on:
  push:
    branches:
      - main  # Change this if using a different branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Ensure SSH Key is properly set up
      - name: Setup SSH Key and Configure Known Hosts
        run: |
          # Ensure SSH directory exists
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # Decode and write the private key to ~/.ssh/id_rsa
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" | base64 --decode > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Start SSH agent and add the key
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa

          # Debug: Print SSH key details
          ls -lah ~/.ssh/
          cat ~/.ssh/id_rsa.pub || echo "Public key not available"

          # Add EC2 host to known_hosts
          ssh-keyscan -H ${{ secrets.AWS_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      # Debug: Show environment variables
      - name: Log Environment Variables
        run: |
          echo "AWS_USERNAME: ${{ secrets.AWS_USERNAME }}"
          echo "AWS_HOST: ${{ secrets.AWS_HOST }}"
          echo "AWS_REGION: ${{ secrets.AWS_REGION }}"

      # Test SSH Connection
      - name: Test SSH Connection
        run: |
          ssh -v -o StrictHostKeyChecking=no ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }} "echo 'SSH Connection Successful'"

      # Deploy: Pull latest changes, install dependencies, and restart app
      - name: Deploy Application
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }} << 'EOF'
            # Ensure app directory exists
            mkdir -p /home/${{ secrets.AWS_USERNAME }}/app
            cd /home/${{ secrets.AWS_USERNAME }}/app || exit 1

            # Ensure Git is installed
            if ! command -v git &> /dev/null; then
              echo "Git not found, installing..."
              sudo apt update && sudo apt install -y git
            fi

            # Clone repo if it's missing
            if [ ! -d ".git" ]; then
              echo "Repository not found, cloning..."
              git clone https://github.com/SUNAY08/github-actions-demo.git .
            else
              echo "Pulling latest changes..."
              git pull origin main
            fi

            # Ensure Node.js and npm are installed
            if ! command -v node &> /dev/null || ! command -v npm &> /dev/null; then
              echo "Node.js and npm not found, installing..."
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              sudo apt install -y nodejs
            fi

            # Install dependencies
            npm install

            # Ensure pm2 is installed
            if ! command -v pm2 &> /dev/null; then
              echo "PM2 not found, installing..."
              npm install -g pm2
            fi

            # Start or restart the app
            pm2 start app.js --name my-app || pm2 restart my-app

            echo "Deployment complete!"
          EOF

      # Health check of the deployed application
      - name: Check API Health
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" "http://${{ secrets.AWS_HOST }}:${{ secrets.AWS_PORT }}/health")
          if [ "$response" -eq 200 ]; then
            echo "UP"
          else
            echo "API health check failed with status code $response"
            exit 1
          fi
